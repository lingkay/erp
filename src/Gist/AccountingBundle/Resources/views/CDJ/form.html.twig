{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form %}
{% import _self as form_custom %}

{% block content %}
    <div class="row">
        <div class="col-md-12">
            <div class="portlet box blue-hoki">
                <div class="portlet-title">
                    <div class="caption">Add CDJ Entries</div>
                </div>
                <div class="portlet-body form">
                    <div class="table-toolbar">
                        <a href="javascript:void(0)" class="btn green" id="btn_add_entry">Add Entry</a>
                     </div>
                    <!-- BEGIN FORM-->
                    <form method="post" class="form-horizontal" id="cdj_form">
                        <div class="form-body">
                            {{ form.group_date('Record Date', 'record_date',cdate|date('m/d/Y'), 2,4)}}
                            {{ form.group_textarea('Particulars', 'particulars',"",4,2,4)}}
                           
                            <table id="table_entries" class="table table-striped table-bordered table-hover">
                                <thead>
                                    <th width="20%">Account</th>
                                    <th>Debit</th>
                                    <th>Credit</th>
                                    <th></th>
                                </thead>
                                <tbody>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td>
                                            Total
                                        </td>
                                        <td>
                                            <input readonly class="form-control price align-right" name="debit_total" id="debit_total" type="number" value="0" min="0" />
                                        </td>
                                        <td>
                                            <input readonly class="form-control price align-right" name="credit_total" id="credit_total" type="number" value="0" min="0" />
                                        </td>
                                        <td colspan="2"></td>
                                    </tr>
                                </tfoot>
                            </table>
                        
                        </div>
                        <div class="form-actions fluid">
                            <div class="col-md-9">
                                {% if not readonly %}
                                    <button type="submit" class="btn blue">Next</button>
                                {% endif %}
                                <a href="{{ path(route_list) }}" class="btn default">Go back to list</a>
                            </div>
                        </div>
                    </form>
                    <!-- END FORM-->
                </div>
            </div>
        </div>
    </div>
{% endblock %}


{% block js %}
<script id="entry-template" type="x-tmpl-mustache">
    <tr >
        <td style="vertical-align:middle">
            {{ form.select('account[]', account_opts)}}
        </td>
        <td style="vertical-align:middle">
           <input class="form-control price align-right debit" name="debit[]" type="number" value="0" min="0" />
        </td>
        <td style="vertical-align:middle">
           <input class="form-control price align-right credit" name="credit[]" type="number" value="0" min="0" />
        </td>
        <td style="vertical-align:middle">
            <button type="button" class="btn default btn-xs red btn_delete">
                <i class="fa fa-minus-circle"></i>
                Remove
            </button>
        </td>
    </tr>
</script>

<script>
    function updateTotal(){
        var debit = 0, credit = 0;
        $(".debit").each(function(){
            debit += parseFloat($(this).val());
        })

        $(".credit").each(function(){
            credit += parseFloat($(this).val());
        })

        $('#debit_total').val(debit);
        $('#credit_total').val(credit);
    }

    function deleteEntry(row){
        row.parents('tr').remove();
        updateTotal();
    }


    function addEntry(){
         var template = $('#entry-template').html();
         Mustache.parse(template);
         var entry = Mustache.render(template);
         $('#table_entries tbody').append(entry);

         $('.select_2').select2(); 
         updateTotal();
    }

    function checkField(el)
    {
        if(el.hasClass('debit'))
            if(parseFloat(el.val()) != 0.0 && el.val() != ""){
                el.parents('tr').find('input.credit').prop('readonly', true);
            }else {
                el.val(0);
                el.parents('tr').find('input.credit').prop('readonly', false);
            }
            
        if(el.hasClass('credit'))
            if(parseFloat(el.val()) != 0.0 && el.val() != ""){
                el.parents('tr').find('input.debit').prop('readonly', true);
            }else {
                el.val(0);
                el.parents('tr').find('input.debit').prop('readonly', false);
            }
    }
    $(document).ready(function() {
           addEntry();
          addEntry();
    	$('#btn_add_entry').click(function(){
            addEntry();
        })



        $('#table_entries').on("change, blur", ".debit, .credit", function(){
            checkField($(this));
            updateTotal();
        });

        $('#table_entries').on("click", ".btn_delete", function(){
            deleteEntry($(this));
        });

        $('#cdj_form').submit(function(e) {
            if ($('#debit_total').val() !== $('#credit_total').val()) {
                e.preventDefault();
                toastr['error']('Debit and Credit not Balanced.');
                return;
            }

            hasDuplicate = false;
            $('#table_entries > tbody > tr:visible').each(function() {
                var account1 = $(this).find('select').val();
                $('#table_entries > tbody > tr:visible').not(this).each(function() {
                    var account2 = $(this).find('select').val();
                    if (account1 == account2) {
                        hasDuplicate = true;
                    }
                });

            });

            if(hasDuplicate){
                 e.preventDefault();
                 toastr['error']('Duplicate Account.');
                 return;
             }
        });

    });
</script>
{% endblock %}
{% block css %}
<style>
.align-right {
    text-align: right;    
}
</style>
{% endblock %}
