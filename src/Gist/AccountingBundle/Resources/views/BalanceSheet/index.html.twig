{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form %}
{% block content %}
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue-hoki">
            <div class="portlet-title">
                <div class="caption">{{list_title}}</div>
            </div>
            <div class="portlet-body form">
               {#  <div class="alert alert-warning alert-dismissable">
                   <strong>Notice: </strong>
                   {{ notice }}
                </div> #}
                <!-- BEGIN FORM-->
                <form method="post" class="form-horizontal">
                    <div class="form-body">
                        <div class="portlet box blue-hoki">
                            <div class="portlet-body">
                            {{ form.group_date_range('daterange', "Record Date", 'date_from','date_to', date_from, date_to, 3,4,'m/d/Y','m/d/Y') }}
                            <br/>
                            <button type="submit" class="btn blue">Export CSV</button>
                            <button type="button" id="tb_table_btn" class="btn green">Generate Table</button>
                           
                            </div>
                        </div>
                        <div class="col-md-12 list-table-wrapper" style="overflow: auto;">
                        </div>
                    </div>
                    
                    <div class="clearfix"></div>
                    <div class="form-actions fluid">
                        {# <div class="col-md-offset-3 col-md-9">
                            <button type="submit" class="btn blue">Generate</button>
                            <button type="button" id="tb_table_btn" class="btn green">Generate Table</button>
                        </div> #}
                    </div>
                </form>
                <!-- END FORM-->
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block js %}


<script>
$(document).ready(function() {
    //for Year Picker
    $("#cform-year").css('cursor', 'pointer');
    $("#cform-year").change(function() {
       $(".datepicker").css('display','none');
    });
    $("#cform-year").datepicker( {
       format: "yyyy", // Notice the Extra space at the beginning
       viewMode: "years",
       minViewMode: "years"
    });

    $("#cgroup-year .calendar").addClass("disabled", "true");
    $("#cgroup-year").attr("align", "right");

    $('#daterange').daterangepicker(
        {
            ranges: {
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')],
                'This Year': [moment().startOf('year', 1), moment().endOf('year')],
                'Last Year': [moment().subtract('year', 1).startOf('year'), moment().subtract('year', 1).endOf('year')]
                
            },
            opens: 'left',
            format: 'MM/DD/YYYY',
        },
        function(start, end) {
            $('#daterange input').val(start.format('MM/DD/YYYY') + '   -   ' + end.format('MM/DD/YYYY'));
            $('#cform-date_from').val(start.format('MM/DD/YYYY'));
            $('#cform-date_to').val(end.format('MM/DD/YYYY'));
            
        }
    );

    $('#tb_table_btn').click(function(){
        var from = moment($('#cform-date_from').val());
        var to = moment($('#cform-date_to').val());

        from = from.format('YYYY-MM-DD');
        to = to.format('YYYY-MM-DD');
        var path = "{{ path('gist_accounting_bs_generate_table', { 'from' : 'FROM', 'to' : 'TO' } )}}"
        path = path.replace('FROM',from);
        path = path.replace('TO',to);

        $.ajax({
            url: path,
            type: "GET",
            success: function(data) {
                $('#list_table').remove();
                var html = $('#tb_table_template').html();
                $('.list-table-wrapper').append(html);

                var count = data.date_array.length - 1;

                // text 1
                $('#thead_tb').append('<tr class="1trhead">');
                $('.1trhead').append("<th>Cosmetigroup Int'l Corp</th>");

                for (var i = 1; count >= i; i++) {
                    $('.1trhead').append('<th></th>');
                }
                $('#thead_tb').append('</tr>');

                // text 2
                $('#thead_tb').append('<tr class="2trhead">');
                $('.2trhead').append("<th>Statement of Financial Position</th>");

                for (var i = 1; count >= i; i++) {
                    $('.2trhead').append('<th></th>');
                }
                $('#thead_tb').append('</tr>');

                // append Months
                $('#thead_tb').append('<tr id="tr_thead1">');
                $.each(data.date_array, function(h1, v1) {
                    $('#tr_thead1').append('<th>'+v1+'</th>');
                });
                $('#thead_tb').append('</tr>');

                // append list of accounts in assets
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.bs.assets, function(h1, v1) {
                    if(typeof(v1) != "undefined" && v1 !== null && typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlistmain'+h1+'">');
                        $('.1trlistmain'+h1+'').append('<td>'+v1.name+'</td>');

                        for (var i = 1; count >= i; i++) {
                            $('.1trlistmain'+h1+'').append('<td></td>');
                        }
                        $('#tbody_tb').append('</tr>');
                    }else{
                        $('#tbody_tb').append('<tr class="1trlisttotal'+h1+'">');
                            $('.1trlisttotal'+h1+'').append('<td>TOTAL ASSETS</td>');
                            $.each(v1, function(h2, v2) {
                                $('.1trlisttotal'+h1+'').append('<td style="text-align:right;">'+v2.toLocaleString('en')+'</td>');
                            });
                        $('#tbody_tb').append('</tr>');
                    }

                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $.each(v1.accounts, function(h2, v2) {
                            $('#tbody_tb').append('<tr class="1trlist'+h2+'">');
                            var c = 0;
                            $.each(v2, function(h3, v3) {
                                if (c != 0) {
                                    $('.1trlist'+h2+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                                }else{
                                    $('.1trlist'+h2+'').append('<td>'+v3+'</td>');
                                }
                                c++;
                            });
                            $('#tbody_tb').append('</tr>');
                        });
                    }
                });

                // add space
                $('#tbody_tb').append('<tr class="1space">');
                for (var i = 0; count >= i; i++) {
                    $('.1space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // append list of accounts in liability
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.bs.liability, function(h1, v1) {
                    if(typeof(v1) != "undefined" && v1 !== null && typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlistmainlia'+h1+'">');
                        $('.1trlistmainlia'+h1+'').append('<td>'+v1.name+'</td>');

                        for (var i = 1; count >= i; i++) {
                            $('.1trlistmainlia'+h1+'').append('<td></td>');
                        }
                        $('#tbody_tb').append('</tr>');
                    }

                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $.each(v1.accounts, function(h2, v2) {
                            $('#tbody_tb').append('<tr class="2trlist'+h2+'">');
                            var c = 0;
                            $.each(v2, function(h3, v3) {
                                if (c != 0) {
                                    $('.2trlist'+h2+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                                }else{
                                    $('.2trlist'+h2+'').append('<td>'+v3+'</td>');
                                }
                                c++;
                            });
                            $('#tbody_tb').append('</tr>');
                        });
                    }
                });

                // append list of accounts in capital
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.bs.capital, function(h1, v1) {
                    if(typeof(v1) != "undefined" && v1 !== null && typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlistmaincap'+h1+'">');
                        $('.1trlistmaincap'+h1+'').append('<td>'+v1.name+'</td>');

                        for (var i = 1; count >= i; i++) {
                            $('.1trlistmaincap'+h1+'').append('<td></td>');
                        }
                        $('#tbody_tb').append('</tr>');
                    }
                    
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $.each(v1.accounts, function(h2, v2) {
                            $('#tbody_tb').append('<tr class="3trlist'+h2+'">');
                            var c = 0;
                            $.each(v2, function(h3, v3) {
                                if (c != 0) {
                                    $('.3trlist'+h2+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                                }else{
                                    $('.3trlist'+h2+'').append('<td>'+v3+'</td>');
                                }
                                c++;
                            });
                            $('#tbody_tb').append('</tr>');
                        });
                    }
                });

                // TOTAL LIABILITY AND EQUITY
                $('#tbody_tb').append('<tr class="2trlisttotal">');
                    $('.2trlisttotal').append('<td>TOTAL LIABILITY AND EQUITY</td>');
                    $.each(data.bs.liability['total'], function(lk, lv) {
                        var sum = data.bs.liability['total'][lk] + data.bs.capital['total'][lk];
                        $('.2trlisttotal').append('<td style="text-align:right;">'+sum.toLocaleString('en')+'</td>');
                    });
                $('#tbody_tb').append('</tr>');

                $('#list_table').append('</tbody>');
            },
            cache: false
        });
    });
});
</script>
<script id="tb_table_template" type="x-tmpl-mustache">
<table class="table table-striped table-bordered table-hover" id="list_table">
    <thead id="thead_tb">
        
    </thead>
</table>
</script>
{% endblock %}

{% block css %}
<link href="{{ asset('bundles/gisttemplate/assets/global/plugins/select2/select2.css') }}" rel="stylesheet" type="text/css" />
<link href="{{ asset('bundles/gisttemplate/assets/global/plugins/data-tables/DT_bootstrap.css') }}" rel="stylesheet" type="text/css" />
{% endblock %}
