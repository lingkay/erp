{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form %}
{% block content %}
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue-hoki">
            <div class="portlet-title">
                <div class="caption">{{list_title}}</div>
            </div>
            <div class="portlet-body form">
               {#  <div class="alert alert-warning alert-dismissable">
                   <strong>Notice: </strong>
                   {{ notice }}
                </div> #}
                <!-- BEGIN FORM-->
                <form method="post" class="form-horizontal">
                    <div class="form-body">
                        <div class="portlet box blue-hoki">
                            <div class="portlet-body">
                            {{ form.group_date_range('daterange', "Record Date", 'date_from','date_to', date_from, date_to, 3,4,'m/d/Y','m/d/Y') }}
                            <br/>
                            <button type="submit" class="btn blue">Export CSV</button>
                            <button type="button" id="tb_table_btn" class="btn green">Generate Table</button>
                           
                            </div>
                        </div>
                            {# 
                            {{ form.group_date('Year', 'year', "now"|date('Y'), 3, 4, false) }}              
                            {{ form.group_select('Month', 'month', months, '', 3, 4) }} #}
                    
                        <div class="col-md-12 list-table-wrapper" style="overflow: auto;">
                        </div>
                    </div>
                    
                    <div class="clearfix"></div>
                    <div class="form-actions fluid">
                    </div>
                </form>
                <!-- END FORM-->
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block js %}


<script>
$(document).ready(function() {
    //for Year Picker
    $("#cform-year").css('cursor', 'pointer');
    $("#cform-year").change(function() {
       $(".datepicker").css('display','none');
    });
    $("#cform-year").datepicker( {
       format: "yyyy", // Notice the Extra space at the beginning
       viewMode: "years",
       minViewMode: "years"
    });

    $("#cgroup-year .calendar").addClass("disabled", "true");
    $("#cgroup-year").attr("align", "right");

    $('#daterange').daterangepicker(
        {
            ranges: {
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')],
                'This Year': [moment().startOf('year', 1), moment().endOf('year')],
                'Last Year': [moment().subtract('year', 1).startOf('year'), moment().subtract('year', 1).endOf('year')]
                
            },
            opens: 'left',
            format: 'MM/DD/YYYY',
        },
        function(start, end) {
            $('#daterange input').val(start.format('MM/DD/YYYY') + '   -   ' + end.format('MM/DD/YYYY'));
            $('#cform-date_from').val(start.format('MM/DD/YYYY'));
            $('#cform-date_to').val(end.format('MM/DD/YYYY'));
            
        }
    );

    $('#tb_table_btn').click(function(){
        var from = moment($('#cform-date_from').val());
        var to = moment($('#cform-date_to').val());

        from = from.format('YYYY-MM-DD');
        to = to.format('YYYY-MM-DD');
        var path = "{{ path('gist_accounting_pl_generate_table', { 'from' : 'FROM', 'to' : 'TO' } )}}"
        path = path.replace('FROM',from);
        path = path.replace('TO',to);

        $.ajax({
            url: path,
            type: "GET",
            success: function(data) {
                $('#list_table').remove();
                var html = $('#tb_table_template').html();
                $('.list-table-wrapper').append(html);
                
                var count = data.date_array.length - 1;

                // text 1
                $('#thead_tb').append('<tr class="1trhead">');
                $('.1trhead').append("<th></th>");
                $('.1trhead').append("<th>Cosmetigroup Int'l Corporation</th>");
                for (var i = 1; count >= i; i++) {
                    $('.1trhead').append('<th></th>');
                }
                $('#thead_tb').append('</tr>');

                // append Months
                $('#thead_tb').append('<tr id="tr_thead1">');
                $('#tr_thead1').append("<th></th>");
                $.each(data.date_array, function(h1, v1) {
                    $('#tr_thead1').append('<th>'+v1+'</th>');
                });
                $('#thead_tb').append('</tr>');

                // append below text
                $('#thead_tb').append('<tr id="tr_thead1_1">');
                $('#tr_thead1_1').append("<th></th>");
                $.each(data.below_text, function(h1, v1) {
                    $('#tr_thead1_1').append('<th>'+v1+'</th>');
                });
                $('#thead_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="1space">');
                $('.1space').append('<td></td>');
                for (var i = 0; count >= i; i++) {
                    $('.1space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // text 1
                $('#thead_tb').append('<tr class="2trhead">');
                $('.2trhead').append("<th>Code</th>");
                $('.2trhead').append("<th>Sales</th>");
                for (var i = 1; count >= i; i++) {
                    $('.2trhead').append('<th></th>');
                }
                $('#thead_tb').append('</tr>');

                // append list of accounts in netsales sales
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.netsales_main_sales, function(h1, v1) {
                    console.log(v1,"v1");
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        if(typeof(v1.accounts.type) != "undefined" && v1.accounts.type !== null && v1.accounts.type == 'sales') {
                            delete v1.accounts["type"];
                            $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                            var c = 0;
                            $.each(v1.accounts, function(h3, v3) {
                                if (c < 2) {
                                    $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                                }else{
                                    $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                                }
                                c++;
                            });
                            $('#tbody_tb').append('</tr>');
                        }
                    }
                });

                // netsales sales total
                $('#tbody_tb').append('<tr class="1trlisttotal">');
                    $('.1trlisttotal').append('<td></td>');
                    $('.1trlisttotal').append('<td>TOTAL SALES</td>');
                    $.each(data.pl.netsales['nsale_total'], function(nk, nv) {
                        if(typeof(nv.sales) != "undefined" && nv.sales !== null) {
                            $('.1trlisttotal').append('<td style="text-align:right;">'+nv.sales.toLocaleString('en')+'</td>');
                        }else{
                            $('.1trlisttotal').append('<td style="text-align:right;">0</td>');
                            
                        }
                        $('.1trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="2space">');
                $('.2space').append('<td></td>');
                for (var i = 0; count >= i; i++) {
                    $('.2space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // append list of accounts in netsales revenue
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.netsales_main_revenue, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        if(typeof(v1.accounts.type) != "undefined" && v1.accounts.type !== null && v1.accounts.type == 'revenue') {
                            delete v1.accounts["type"];
                            $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                            var c = 0;
                            $.each(v1.accounts, function(h3, v3) {
                                if (c < 2) {
                                    $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                                }else{
                                    $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                                }
                                c++;
                            });
                            $('#tbody_tb').append('</tr>');
                        }
                    }
                });

                // netsales revenue total
                $('#tbody_tb').append('<tr class="2trlisttotal">');
                    $('.2trlisttotal').append('<td></td>');
                    $('.2trlisttotal').append('<td>TOTAL REVENUE</td>');
                    $.each(data.pl.netsales['nrevenue_total'], function(nk, nv) {
                        if(typeof(nv.revenue) != "undefined" && nv.revenue !== null) {
                            $('.2trlisttotal').append('<td style="text-align:right;">'+nv.revenue.toLocaleString('en')+'</td>');
                        }else{
                            $('.2trlisttotal').append('<td style="text-align:right;">0</td>');
                        }
                        $('.2trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // text 1
                $('#tbody_tb').append('<tr class="2trhead_1">');
                $('.2trhead_1').append("<td></td>");
                $('.2trhead_1').append("<td>Sales Return, Sales Discount and other Allowances</td>");
                for (var i = 1; count >= i; i++) {
                    $('.2trhead_1').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // append list of accounts in netsales sales and return
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.netsales_main_sales_return, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        if(typeof(v1.accounts.type) != "undefined" && v1.accounts.type !== null && v1.accounts.type == 'sales_return') {
                            delete v1.accounts["type"];
                            $('#tbody_tb').append('<tr class="1trlist_1_'+h1+'">');
                            var c = 0;
                            $.each(v1.accounts, function(h3, v3) {
                                if (c < 2) {
                                    $('.1trlist_1_'+h1+'').append('<td>'+v3+'</td>');
                                }else{
                                    $('.1trlist_1_'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                                }
                                c++;
                            });
                            $('#tbody_tb').append('</tr>');
                        }
                    }
                });

                // netsales sales and return total
                $('#tbody_tb').append('<tr class="2trlisttotal_1">');
                    $('.2trlisttotal_1').append('<td></td>');
                    $('.2trlisttotal_1').append('<td>TOTAL SALES RETURN, ALLOWANCES AND DISCOUNTS</td>');
                    // console.log(data.pl.netsales['nsale_return_total'], " test");
                    if(typeof(data.pl.netsales['nsale_return_total']) != "undefined" && data.pl.netsales['nsale_return_total'] !== null) {
                        $.each(data.pl.netsales['nsale_return_total'], function(nk, nv) {
                            if(typeof(nv.sales_return) != "undefined" && nv.sales_return !== null) {
                                $('.2trlisttotal_1').append('<td style="text-align:right;">'+nv.sales_return.toLocaleString('en')+'</td>');
                            }else{
                                $('.2trlisttotal_1').append('<td style="text-align:right;">0</td>');
                            }
                            $('.2trlisttotal_1').append('<td style="text-align:right;"></td>');
                        });
                    }else{
                        for (var i = 1; count >= i; i++) {
                            $('.2trlisttotal_1').append('<th></th>');
                        }
                    }
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="3space">');
                $('.3space').append('<td></td>');
                for (var i = 0; count >= i; i++) {
                    $('.3space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // net revenue total
                $('#tbody_tb').append('<tr class="3trlisttotal">');
                    $('.3trlisttotal').append('<td></td>');
                    $('.3trlisttotal').append('<td>NET REVENUE</td>');
                    $.each(data.pl.netsales['total'], function(nk, nv) {
                        $('.3trlisttotal').append('<td style="text-align:right;">'+nv.toLocaleString('en')+'</td>');
                        $('.3trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="4space_0">');
                $('.4space_0').append('<td></td>');
                for (var i = 0; count >= i; i++) {
                    $('.4space_0').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // text 2
                $('#tbody_tb').append('<tr class="3trhead">');
                $('.3trhead').append("<td></td>");
                $('.3trhead').append("<td>Cost of Sales</td>");
                for (var i = 1; count >= i; i++) {
                    $('.3trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Cost of sales
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.cos, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2 ) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // cos total
                $('#tbody_tb').append('<tr class="4trlisttotal">');
                    $('.4trlisttotal').append('<td></td>');
                    $('.4trlisttotal').append('<td>TOTAL COST OF SALES</td>');
                    $.each(data.pl.cos['total'], function(nk, nv) {
                        $('.4trlisttotal').append('<td style="text-align:right;">'+nv.toLocaleString('en')+'</td>');
                        $('.4trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="4space">');
                $('.4space').append('<td></td>');
                for (var i = 0; count >= i; i++) {
                    $('.4space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // GROSS PROFIT TOTAL
                $('#tbody_tb').append('<tr class="5trlisttotal">');
                    $('.5trlisttotal').append('<td></td>');
                    $('.5trlisttotal').append('<td>GROSS PROFIT</td>');
                    $.each(data.pl.cos['total'], function(lk, lv) {
                        var sum = data.pl.netsales['total'][lk] - data.pl.cos['total'][lk];
                        $('.5trlisttotal').append('<td style="text-align:right;">'+sum.toLocaleString('en')+'</td>');
                        $('.5trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="5space">');
                $('.5space').append('<td></td>');
                for (var i = 0; count >= i; i++) {
                    $('.5space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // text 2
                $('#tbody_tb').append('<tr class="4trhead">');
                $('.4trhead').append('<td></td>');
                $('.4trhead').append("<td>Cost of Labor</td>");
                for (var i = 1; count >= i; i++) {
                    $('.4trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Cost of labor
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.col, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // cos total
                $('#tbody_tb').append('<tr class="6trlisttotal">');
                    $('.6trlisttotal').append('<td></td>');
                    $('.6trlisttotal').append('<td>TOTAL PAYROLL COST</td>');
                    $.each(data.pl.col['total'], function(nk, nv) {
                        $('.6trlisttotal').append('<td style="text-align:right;">'+nv.toLocaleString('en')+'</td>');
                        $('.6trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="6space">');
                $('.6space').append('<td></td>');
                for (var i = 0; count >= i; i++) {
                    $('.6space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // text 2
                $('#tbody_tb').append('<tr class="5trhead">');
                $('.5trhead').append('<td></td>');
                $('.5trhead').append("<td>Other Employee Cost</td>");
                for (var i = 1; count >= i; i++) {
                    $('.5trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Other Employee Cost
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.eoc, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // TOTAL OTHER EMPLOYEE COST
                $('#tbody_tb').append('<tr class="7trlisttotal">');
                    $('.7trlisttotal').append('<td></td>');
                    $('.7trlisttotal').append('<td>TOTAL OTHER EMPLOYEE COST</td>');
                    $.each(data.pl.eoc['total'], function(nk, nv) {
                        $('.7trlisttotal').append('<td style="text-align:right;">'+nv.toLocaleString('en')+'</td>');
                        $('.7trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // TOTAL PAYROLL AND OTHER EMPLOYEE COST
                $('#tbody_tb').append('<tr class="8trlisttotal">');
                    $('.8trlisttotal').append('<td></td>');
                    $('.8trlisttotal').append('<td>TOTAL PAYROLL AND OTHER EMPLOYEE COST</td>');
                    $.each(data.pl.eoc['total'], function(nk, nv) {
                        $('.8trlisttotal').append('<td style="text-align:right;">'+(nv + data.pl.col['total'][nk]).toLocaleString('en')+'</td>');
                        $('.8trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="7space">');
                $('.7space').append('<td></td>');
                for (var i = 0; count >= i; i++) {
                    $('.7space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // text 2
                $('#tbody_tb').append('<tr class="6trhead">');
                $('.6trhead').append('<td></td>');
                $('.6trhead').append("<td>Operating Expenses</td>");
                for (var i = 1; count >= i; i++) {
                    $('.6trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // text 2
                $('#tbody_tb').append('<tr class="7trhead">');
                $('.7trhead').append('<td></td>');
                $('.7trhead').append("<td>Controllable Expenses</td>");
                for (var i = 1; count >= i; i++) {
                    $('.7trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // text 2
                $('#tbody_tb').append('<tr class="8trhead">');
                $('.8trhead').append("<td>Utility Cost</td>");
                $('.8trhead').append('<td></td>');
                for (var i = 1; count >= i; i++) {
                    $('.8trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Utility Cost
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.uc, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // text 2
                $('#tbody_tb').append('<tr class="9trhead">');
                $('.9trhead').append("<td>Telephone Charges and DSL Connection</td>");
                $('.9trhead').append('<td></td>');
                for (var i = 1; count >= i; i++) {
                    $('.9trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Telephone Charges and DSL Connection
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.tcdc, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // text 2
                $('#tbody_tb').append('<tr class="10trhead">');
                $('.10trhead').append("<td>Supplies</td>");
                $('.10trhead').append('<td></td>');
                for (var i = 1; count >= i; i++) {
                    $('.10trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Supplies
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.supp, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // text 2
                $('#tbody_tb').append('<tr class="11trhead">');
                $('.11trhead').append("<td>Repair and Maintenance</td>");
                $('.11trhead').append('<td></td>');
                for (var i = 1; count >= i; i++) {
                    $('.11trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Repair and Maintenance
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.rm, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // text 2
                $('#tbody_tb').append('<tr class="12trhead">');
                $('.12trhead').append("<td>Freight Out and Others</td>");
                $('.12trhead').append('<td></td>');
                for (var i = 1; count >= i; i++) {
                    $('.12trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Freight Out and Others
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.foo, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // text 2
                $('#tbody_tb').append('<tr class="13trhead">');
                $('.13trhead').append("<td>Other External Expenditures</td>");
                $('.13trhead').append('<td></td>');
                for (var i = 1; count >= i; i++) {
                    $('.13trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Other External Expenditures
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.oee, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // TOTAL CONTROLLABLE COST
                $('#tbody_tb').append('<tr class="9trlisttotal">');
                    $('.9trlisttotal').append('<td></td>');
                    $('.9trlisttotal').append('<td>TOTAL CONTROLLABLE COST</td>');
                    $.each(data.pl.controllable_total['total'], function(nk, nv) {
                        $('.9trlisttotal').append('<td style="text-align:right;">'+nv.toLocaleString('en')+'</td>');
                        $('.9trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="8space">');
                $('.8space').append('<td></td>');
                for (var i = 0; count >= i; i++) {
                    $('.8space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // text 2
                $('#tbody_tb').append('<tr class="14trhead">');
                $('.14trhead').append('<td></td>');
                $('.14trhead').append("<td>Non Controllable Expenses</td>");
                for (var i = 1; count >= i; i++) {
                    $('.14trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // text 2
                $('#tbody_tb').append('<tr class="15trhead">');
                $('.15trhead').append("<td>Occupancy Cost</td>");
                $('.15trhead').append('<td></td>');
                for (var i = 1; count >= i; i++) {
                    $('.15trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Occupancy Cost
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.oc, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // text 2
                $('#tbody_tb').append('<tr class="16trhead">');
                $('.16trhead').append("<td>Depreciation and Amortization</td>");
                $('.16trhead').append('<td></td>');
                for (var i = 1; count >= i; i++) {
                    $('.16trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Depreciation and Amortization
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.da, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // TOTAL NON CONTROLLABLE COST
                $('#tbody_tb').append('<tr class="10trlisttotal">');
                    $('.10trlisttotal').append('<td></td>');
                    $('.10trlisttotal').append('<td>TOTAL NON CONTROLLABLE COST</td>');
                    $.each(data.pl.non_controllable_total['total'], function(nk, nv) {
                        $('.10trlisttotal').append('<td style="text-align:right;">'+nv.toLocaleString('en')+'</td>');
                        $('.10trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // TOTAL OPERATING EXPENSES
                $('#tbody_tb').append('<tr class="11trlisttotal">');
                    $('.11trlisttotal').append('<td></td>');
                    $('.11trlisttotal').append('<td>TOTAL OPERATING EXPENSES</td>');
                    $.each(data.pl.non_controllable_total['total'], function(nk, nv) {
                        $('.11trlisttotal').append('<td style="text-align:right;">'+(nv + data.pl.controllable_total['total'][nk]).toLocaleString('en')+'</td>');
                        $('.11trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="9space">');
                $('.9space').append('<td></td>');   
                for (var i = 0; count >= i; i++) {
                    $('.9space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // text 2
                $('#tbody_tb').append('<tr class="17trhead">');
                $('.17trhead').append("<td>Marketing Advertising and Branding</td>");
                $('.17trhead').append('<td></td>');
                for (var i = 1; count >= i; i++) {
                    $('.17trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Marketing Advertising and Branding
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.mab, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // TOTAL SALES AND MARKETING
                $('#tbody_tb').append('<tr class="12trlisttotal">');
                    $('.12trlisttotal').append('<td></td>');
                    $('.12trlisttotal').append('<td>TOTAL SALES AND MARKETING</td>');
                    $.each(data.pl.mab['total'], function(nk, nv) {
                        $('.12trlisttotal').append('<td style="text-align:right;">'+nv.toLocaleString('en')+'</td>');
                        $('.12trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // text 2
                $('#tbody_tb').append('<tr class="18trhead">');
                $('.18trhead').append("<td>Other income and charges</td>");
                $('.18trhead').append('<td></td>');
                for (var i = 1; count >= i; i++) {
                    $('.18trhead').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // Other income and charges
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.oic, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // TOTAL OTHER INCOME/(CHARGES)
                $('#tbody_tb').append('<tr class="13trlisttotal">');
                    $('.13trlisttotal').append('<td></td>');
                    $('.13trlisttotal').append('<td>TOTAL OTHER INCOME/(CHARGES)</td>');
                    $.each(data.pl.oic['total'], function(nk, nv) {
                        $('.13trlisttotal').append('<td style="text-align:right;">'+nv.toLocaleString('en')+'</td>');
                        $('.13trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="10space">');
                $('.10space').append('<td></td>');   
                for (var i = 0; count >= i; i++) {
                    $('.10space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // TOTAL COST AND EXPENSES
                $('#tbody_tb').append('<tr class="2trlisttotal_2">');
                    $('.2trlisttotal_2').append('<td></td>');
                    $('.2trlisttotal_2').append('<td>TOTAL COST AND EXPENSES</td>');
                    $.each(data.pl.oic['total'], function(nk, nv) {
                        var cos = 0;
                        var refund = 0;
                        var col = 0;
                        var opex = 0;
                        var mab = 0;
                        var oic = 0;
                        if(typeof(data.pl.cos['total'][nk]) != "undefined" && data.pl.cos['total'][nk] !== null) {
                            cos = data.pl.cos['total'][nk];
                        }
                        if(typeof(data.pl.netsales['nrevenue_total'][nk].revenue) != "undefined" && data.pl.netsales['nrevenue_total'][nk].revenue !== null) {
                            refund = data.pl.netsales['nrevenue_total'][nk].revenue;
                        }
                        if(typeof(data.pl.col['total'][nk]) != "undefined" && data.pl.col['total'][nk] !== null) {
                            col = data.pl.col['total'][nk];
                        }
                        if(typeof(data.pl.non_controllable_total['total'][nk]) != "undefined" && data.pl.non_controllable_total['total'][nk] !== null && data.pl.controllable_total['total'][nk] != "undefined" && data.pl.controllable_total['total'][nk] !== null) {
                            opex = data.pl.non_controllable_total['total'][nk] + data.pl.controllable_total['total'][nk];
                        }
                        if(typeof(data.pl.mab['total'][nk]) != "undefined" && data.pl.mab['total'][nk] !== null) {
                            mab = data.pl.mab['total'][nk];
                        }

                        var total = cos + refund + col + opex + mab + nv;
                        $('.2trlisttotal_2').append('<td style="text-align:right;">'+total+'</td>');
                        $('.2trlisttotal_2').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="11space">');
                $('.11space').append('<td></td>');   
                for (var i = 0; count >= i; i++) {
                    $('.11space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // INCOME OR LOSS FROM OPERATIONS
                $('#tbody_tb').append('<tr class="2trlisttotal_3">');
                    $('.2trlisttotal_3').append('<td></td>');
                    $('.2trlisttotal_3').append('<td>INCOME OR LOSS FROM OPERATIONS</td>');
                    $.each(data.pl.oic['total'], function(nk, nv) {
                        var cos = 0;
                        var refund = 0;
                        var col = 0;
                        var opex = 0;
                        var mab = 0;
                        var oic = 0;
                        var nr = 0;
                        if(typeof(data.pl.cos['total'][nk]) != "undefined" && data.pl.cos['total'][nk] !== null) {
                            cos = data.pl.cos['total'][nk];
                        }
                        if(typeof(data.pl.netsales['nrevenue_total'][nk].revenue) != "undefined" && data.pl.netsales['nrevenue_total'][nk].revenue !== null) {
                            refund = data.pl.netsales['nrevenue_total'][nk].revenue;
                        }
                        if(typeof(data.pl.col['total'][nk]) != "undefined" && data.pl.col['total'][nk] !== null) {
                            col = data.pl.col['total'][nk];
                        }
                        if(typeof(data.pl.non_controllable_total['total'][nk]) != "undefined" && data.pl.non_controllable_total['total'][nk] !== null && data.pl.controllable_total['total'][nk] != "undefined" && data.pl.controllable_total['total'][nk] !== null) {
                            opex = data.pl.non_controllable_total['total'][nk] + data.pl.controllable_total['total'][nk];
                        }
                        if(typeof(data.pl.mab['total'][nk]) != "undefined" && data.pl.mab['total'][nk] !== null) {
                            mab = data.pl.mab['total'][nk];
                        }
                        if(typeof(data.pl.netsales['total'][nk]) != "undefined" && data.pl.netsales['total'][nk] !== null) {
                            nr = data.pl.netsales['total'][nk];
                        }

                        var total = cos + refund + col + opex + mab + nv;

                        var final_total = nr - total;
                        $('.2trlisttotal_3').append('<td style="text-align:right;">'+final_total+'</td>');
                        $('.2trlisttotal_3').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="12space">');
                $('.12space').append('<td></td>');   
                for (var i = 0; count >= i; i++) {
                    $('.12space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // NET INCOME/(LOSS) BEFORE TAX
                $('#tbody_tb').append('<tr class="2trlisttotal_4">');
                    $('.2trlisttotal_4').append('<td></td>');
                    $('.2trlisttotal_4').append('<td>NET INCOME/(LOSS) BEFORE TAX</td>');
                    $.each(data.pl.oic['total'], function(nk, nv) {
                        var cos = 0;
                        var refund = 0;
                        var col = 0;
                        var opex = 0;
                        var mab = 0;
                        var oic = 0;
                        var nr = 0;
                        if(typeof(data.pl.cos['total'][nk]) != "undefined" && data.pl.cos['total'][nk] !== null) {
                            cos = data.pl.cos['total'][nk];
                        }
                        if(typeof(data.pl.netsales['nrevenue_total'][nk].revenue) != "undefined" && data.pl.netsales['nrevenue_total'][nk].revenue !== null) {
                            refund = data.pl.netsales['nrevenue_total'][nk].revenue;
                        }
                        if(typeof(data.pl.col['total'][nk]) != "undefined" && data.pl.col['total'][nk] !== null) {
                            col = data.pl.col['total'][nk];
                        }
                        if(typeof(data.pl.non_controllable_total['total'][nk]) != "undefined" && data.pl.non_controllable_total['total'][nk] !== null && data.pl.controllable_total['total'][nk] != "undefined" && data.pl.controllable_total['total'][nk] !== null) {
                            opex = data.pl.non_controllable_total['total'][nk] + data.pl.controllable_total['total'][nk];
                        }
                        if(typeof(data.pl.mab['total'][nk]) != "undefined" && data.pl.mab['total'][nk] !== null) {
                            mab = data.pl.mab['total'][nk];
                        }
                        if(typeof(data.pl.netsales['total'][nk]) != "undefined" && data.pl.netsales['total'][nk] !== null) {
                            nr = data.pl.netsales['total'][nk];
                        }

                        var total = cos + refund + col + opex + mab + nv;

                        var final_total = nr - total;
                        $('.2trlisttotal_4').append('<td style="text-align:right;">'+final_total+'</td>');
                        $('.2trlisttotal_4').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');

                // add space
                $('#tbody_tb').append('<tr class="13space">');
                $('.13space').append('<td></td>');   
                for (var i = 0; count >= i; i++) {
                    $('.13space').append('<td></td>');
                }
                $('#tbody_tb').append('</tr>');

                // NET INCOME AFTER TAX
                $('#list_table').append('<tbody id="tbody_tb">');
                $.each(data.pl.nit, function(h1, v1) {
                    if(typeof(v1.accounts) != "undefined" && v1.accounts !== null) {
                        $('#tbody_tb').append('<tr class="1trlist'+h1+'">');
                        var c = 0;
                        $.each(v1.accounts, function(h3, v3) {
                            if (c < 2) {
                                $('.1trlist'+h1+'').append('<td>'+v3+'</td>');
                            }else{
                                $('.1trlist'+h1+'').append('<td style="text-align:right;">'+v3.toLocaleString('en')+'</td>');
                            }
                            c++;
                        });
                        $('#tbody_tb').append('</tr>');
                    }
                });

                // NET INCOME AFTER TAX TOTAL
                $('#tbody_tb').append('<tr class="14trlisttotal">');
                    $('.14trlisttotal').append('<td></td>');
                    $('.14trlisttotal').append('<td>NET INCOME AFTER TAX</td>');
                    $.each(data.pl.oic['total'], function(nk, nv) {
                        var cos = 0;
                        var refund = 0;
                        var col = 0;
                        var opex = 0;
                        var mab = 0;
                        var oic = 0;
                        var nr = 0;
                        var nit = 0;
                        if(typeof(data.pl.cos['total'][nk]) != "undefined" && data.pl.cos['total'][nk] !== null) {
                            cos = data.pl.cos['total'][nk];
                        }
                        if(typeof(data.pl.netsales['nrevenue_total'][nk].revenue) != "undefined" && data.pl.netsales['nrevenue_total'][nk].revenue !== null) {
                            refund = data.pl.netsales['nrevenue_total'][nk].revenue;
                        }
                        if(typeof(data.pl.col['total'][nk]) != "undefined" && data.pl.col['total'][nk] !== null) {
                            col = data.pl.col['total'][nk];
                        }
                        if(typeof(data.pl.non_controllable_total['total'][nk]) != "undefined" && data.pl.non_controllable_total['total'][nk] !== null && data.pl.controllable_total['total'][nk] != "undefined" && data.pl.controllable_total['total'][nk] !== null) {
                            opex = data.pl.non_controllable_total['total'][nk] + data.pl.controllable_total['total'][nk];
                        }
                        if(typeof(data.pl.mab['total'][nk]) != "undefined" && data.pl.mab['total'][nk] !== null) {
                            mab = data.pl.mab['total'][nk];
                        }
                        if(typeof(data.pl.netsales['total'][nk]) != "undefined" && data.pl.netsales['total'][nk] !== null) {
                            nr = data.pl.netsales['total'][nk];
                        }
                        if(typeof(data.pl.nit['total'][nk]) != "undefined" && data.pl.nit['total'][nk] !== null) {
                            nit = data.pl.nit['total'][nk];
                        }

                        var total = cos + refund + col + opex + mab + nv;

                        var final_total = (nr - total) + nit;
                        $('.14trlisttotal').append('<td style="text-align:right;">'+final_total+'</td>');
                        $('.14trlisttotal').append('<td style="text-align:right;"></td>');
                    });
                $('#tbody_tb').append('</tr>');
            },
            cache: false
        });
    });

});
</script>
<script id="tb_table_template" type="x-tmpl-mustache">
<table class="table table-striped table-bordered table-hover" id="list_table">
    <thead id="thead_tb">
    </thead>
</table>
</script>
{% endblock %}

{% block css %}
<link href="{{ asset('bundles/gisttemplate/assets/global/plugins/select2/select2.css') }}" rel="stylesheet" type="text/css" />
<link href="{{ asset('bundles/gisttemplate/assets/global/plugins/data-tables/DT_bootstrap.css') }}" rel="stylesheet" type="text/css" />
{% endblock %}
